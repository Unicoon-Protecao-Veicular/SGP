# Path: production/k8s/keycloak-instance-cr.yaml
# Define a instância do Keycloak a ser criada pelo Operator.
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: keycloak
  namespace: keycloak
  annotations:
    # Wave 10: Cria a instância do Keycloak DEPOIS que o operator está pronto.
    argocd.argoproj.io/sync-wave: "10"
spec:
  instances: 1
  db:
    # --- CONFIGURAÇÃO DA CONEXÃO COM O BANCO DE DADOS ---
    # Certifique-se de que estes valores estão corretos.
    vendor: postgres
    # O 'host' deve ser o nome do serviço do seu cluster Postgres (PGO).
    # O formato padrão é: <cluster-name>-pgbouncer.<namespace>.svc.cluster.local
    host: camunda-pg-cluster-pgbouncer.camunda.svc.cluster.local
    port: 5432
    database: keycloak # O banco de dados para o Keycloak.
    # O 'usernameSecret' e 'passwordSecret' apontam para o Secret que contém as credenciais do DB.
    username: keycloak
    passwordSecret:
      name: keycloak-db-secret # Nome do Secret gerado pelo PGO.
      key: password  # Chave padrão usada pelo PGO para a senha.

  # --- CONFIGURAÇÃO DE REDE E INGRESS ---
  ingress:
    enabled: false

  # --- CONFIGURAÇÃO PARA AMBIENTE K3S SINGLE-NODE ---
  unsupported:
    podTemplate:
      spec:
        tolerations:
          - key: "node-role.kubernetes.io/control-plane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
        containers:
          - name: keycloak
            env:
              - name: KC_PROXY
                value: edge
            startupProbe:
              httpGet:
                path: /health/ready
                port: 8080
              initialDelaySeconds: 10
              periodSeconds: 1
              failureThreshold: 60
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8080
              initialDelaySeconds: 10
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8080
              initialDelaySeconds: 60
              periodSeconds: 10
