# Path: production/k8s/keycloak-instance-cr.yaml
# Define a instância do Keycloak a ser criada pelo Operator.
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: keycloak-instance
  namespace: keycloak
  annotations:
    # Wave 10: Cria a instância do Keycloak DEPOIS que o operator está pronto.
    argocd.argoproj.io/sync-wave: "10"
spec:
  instances: 1
  db:
    # --- CONFIGURAÇÃO DA CONEXÃO COM O BANCO DE DADOS ---
    # Certifique-se de que estes valores estão corretos.
    vendor: postgres
    # O 'host' deve ser o nome do serviço do seu cluster Postgres (PGO).
    # O formato padrão é: <cluster-name>-pgbouncer.<namespace>.svc.cluster.local
    host: camunda-pg-cluster-pgbouncer.camunda.svc.cluster.local
    port: 5432
    database: keycloak # O banco de dados para o Keycloak.
    # O 'usernameSecret' e 'passwordSecret' apontam para o Secret que contém as credenciais do DB.
    username: keycloak
    passwordSecret:
      name: keycloak-db-secret # Nome do Secret gerado pelo PGO.
      key: password  # Chave padrão usada pelo PGO para a senha.


# --- CONFIGURAÇÃO DE REDE E PROXY (AJUSTADA) ---

  # ALTERAÇÃO 2: Adicionada a seção 'additionalOptions'.
  # MOTIVO: Esta é a correção principal. Ela instrui o Keycloak a operar em
  # modo 'edge', fazendo com que ele confie nos cabeçalhos (headers) X-Forwarded-*
  # enviados pelo Ingress NGINX. Isso garante que o Keycloak gere as URLs
  # públicas corretas para redirects e links.
  additionalOptions:
    - name: proxy
      value: edge
    - name: http-port
      value: "9000"
    - name: http-enabled
      value: "true"
  # --- CONFIGURAÇÃO DE REDE E INGRESS ---
  hostname:
    hostname: auth.consultorunicoon.com.br
  ingress:
    enabled: false
