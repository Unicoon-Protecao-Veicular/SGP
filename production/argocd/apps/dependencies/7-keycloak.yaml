# Path: production/argocd/apps/dependencies/keycloak.yaml
# ATENÇÃO: Este arquivo foi modificado para usar o Keycloak Operator em vez do Helm Chart da Bitnami.

# --- 1. Aplicação para instalar o Keycloak Operator ---
# Esta aplicação instala o Operator no cluster usando a definição em 'keycloak/keycloak-operator-subscription.yaml'.
# O Operator é o "cérebro" que saberá como gerenciar, criar e configurar uma instância do Keycloak.
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak-operator
  namespace: argocd
  annotations:
    # Wave 6: Instala o Operator DEPOIS dos bancos de dados e ANTES da instância do Keycloak.
    argocd.argoproj.io/sync-wave: "7"
spec:
  project: camunda-platform
  source:
    # Aponta para o diretório que contém o manifesto do Operator.
    # ATENÇÃO: Verifique se a URL do seu repositório Git está correta.
    repoURL: https://github.com/Unicoon-Protecao-Veicular/SGP.git
    path: production/argocd/apps/dependencies/keycloak
    targetRevision: feat/new-architecture
    # Filtra para incluir apenas o arquivo de subscription do operator.
    directory:
      include: keycloak-operator-subscription.yaml
  destination:
    server: https://kubernetes.default.svc
    # O namespace 'operators' é onde o Operator será instalado.
    # Certifique-se que este namespace existe.
    namespace: operators
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

---

# --- 2. Aplicação para criar a instância do Keycloak ---
# Esta aplicação cria a instância do Keycloak usando o Operator instalado no passo anterior.
# Ela usa a definição do Recurso Customizado (CR) em 'keycloak/keycloak-instance-cr.yaml'.
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak-instance
  namespace: argocd
  annotations:
    # Wave 7: Instala o Keycloak DEPOIS que o Operator está pronto.
    argocd.argoproj.io/sync-wave: "8"
spec:
  project: camunda-platform
  source:
    # Aponta para o diretório que contém o manifesto da instância.
    # ATENÇÃO: Verifique se a URL do seu repositório Git está correta.
    repoURL: https://github.com/Unicoon-Protecao-Veicular/SGP.git
    path: production/argocd/apps/dependencies/keycloak
    targetRevision: feat/new-architecture
    # Filtra para incluir apenas o arquivo CR da instância.
    directory:
      include: keycloak-instance-cr.yaml
  destination:
    server: https://kubernetes.default.svc
    # A instância do Keycloak será criada no namespace 'camunda'.
    namespace: camunda
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
