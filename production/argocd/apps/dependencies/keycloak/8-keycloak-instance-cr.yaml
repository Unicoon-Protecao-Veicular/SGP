# production/k8s/keycloak-instance-cr.yaml
# Define a instância do Keycloak a ser criada pelo Operator.
# A configuração foi migrada do seu antigo arquivo values.yaml.
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: keycloak
  namespace: camunda
spec:
  instances: 1
  db:
    vendor: postgres
    host: camunda-pg-cluster-pgbouncer.camunda.svc.cluster.local
    port: 5432
    database: keycloak
    usernameSecret:
      name: camunda-credentials
      key: keycloak-db-user # IMPORTANTE: Adicione esta chave ao seu secret 'camunda-credentials' com o valor 'keycloak'.
    passwordSecret:
      name: camunda-credentials
      key: keycloak-db-password
  hostname:
    hostname: auth.consultorunicoon.com.br
  ingress:
    enabled: true
    className: nginx
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
  http:
    # O cert-manager usará esta configuração para criar e gerenciar o secret TLS para o Ingress.
    tlsSecret: auth-consultorunicoon-com-br-tls
  unsupported:
    podTemplate:
      spec:
        tolerations:
          - key: "node-role.kubernetes.io/control-plane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
