version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.17.9}
    container_name: es-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.name=camunda-dev
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "${ES_HTTP_PORT:-9200}:9200"
    volumes:
      - es-dev-data:/usr/share/elasticsearch/data
    networks:
      - camunda-dev-net
    restart: unless-stopped

  zeebe:
    image: camunda/zeebe:${ZEEBE_VERSION:-latest}
    container_name: zeebe-dev
    environment:
      - ZEEBE_LOG_LEVEL=info
      - ZEEBE_BROKER_CLUSTER_PARTITIONS_COUNT=1
      - ZEEBE_BROKER_CLUSTER_REPLICATION_FACTOR=1
      - ZEEBE_BROKER_CLUSTER_NODE_ID=0
      - ZEEBE_BROKER_CLUSTER_CLUSTER_SIZE=1
      - ZEEBE_BROKER_GATEWAY_ENABLE=true
      - ZEEBE_BROKER_GATEWAY_NETWORK_PORT=26500
      - ZEEBE_BROKER_NETWORK_COMMANDAPI_PORT=26501
    ports:
      - "26500:26500" # gRPC Gateway
    volumes:
      - zeebe-dev-data:/usr/local/zeebe/data
    networks:
      - camunda-dev-net
    restart: unless-stopped

  operate:
    image: camunda/operate:${OPERATE_VERSION:-latest}
    container_name: operate-dev
    depends_on:
      - elasticsearch
      - zeebe
    environment:
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://elasticsearch:9200
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8081:8080" # expose Operate on standard 8081
    networks:
      - camunda-dev-net
    restart: unless-stopped

  tasklist:
    image: camunda/tasklist:${TASKLIST_VERSION:-latest}
    container_name: tasklist-dev
    depends_on:
      - elasticsearch
      - zeebe
    environment:
      - CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_TASKLIST_ELASTICSEARCH_URL=http://elasticsearch:9200
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8082:8080" # expose Tasklist on standard 8082
    networks:
      - camunda-dev-net
    restart: unless-stopped

  connectors:
    image: camunda/connectors-bundle:${CONNECTORS_VERSION:-latest}
    container_name: connectors-dev
    environment:
      - ZEEBE_CLIENT_BROKER_GATEWAY_ADDRESS=zeebe:26500
      - ZEEBE_CLIENT_SECURITY_PLAINTEXT=true
      - CAMUNDA_CONNECTOR_LOG_LEVEL=info
    depends_on:
      - zeebe
    networks:
      - camunda-dev-net
    restart: unless-stopped

  postgres-identity:
    image: postgres:${IDENTITY_DB_VERSION:-15}
    container_name: postgres-identity-dev
    environment:
      - POSTGRES_DB=${IDENTITY_DB_NAME:-identity}
      - POSTGRES_USER=${IDENTITY_DB_USER:-identity}
      - POSTGRES_PASSWORD=${IDENTITY_DB_PASSWORD:-identity}
    volumes:
      - pg-identity-dev-data:/var/lib/postgresql/data
    networks:
      - camunda-dev-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB:-identity} -U ${POSTGRES_USER:-identity}"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-24.0.4}
    container_name: keycloak-dev
    command: start-dev --http-port=18080
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
    ports:
      - "18080:18080"
    networks:
      - camunda-dev-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:18080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  identity:
    image: camunda/identity:${IDENTITY_VERSION:-latest}
    container_name: identity-dev
    depends_on:
      keycloak:
        condition: service_healthy
      postgres-identity:
        condition: service_healthy
    environment:
      - IDENTITY_DATABASE_HOST=postgres-identity
      - IDENTITY_DATABASE_PORT=5432
      - IDENTITY_DATABASE_NAME=${IDENTITY_DB_NAME:-identity}
      - IDENTITY_DATABASE_USERNAME=${IDENTITY_DB_USER:-identity}
      - IDENTITY_DATABASE_PASSWORD=${IDENTITY_DB_PASSWORD:-identity}
      - KEYCLOAK_URL=http://keycloak:18080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-camunda-platform}
      - KEYCLOAK_ADMIN_CLIENT_SECRET=${KEYCLOAK_ADMIN_CLIENT_SECRET:-changeme}
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8084:8080" # expose Identity on standard 8084
    networks:
      - camunda-dev-net
    restart: unless-stopped

  # --- Camunda Web Modeler (dev only) ---
  postgres-modeler:
    image: postgres:${MODELER_DB_VERSION:-15}
    container_name: postgres-modeler-dev
    environment:
      - POSTGRES_DB=${MODELER_DB_NAME:-modeler}
      - POSTGRES_USER=${MODELER_DB_USER:-modeler}
      - POSTGRES_PASSWORD=${MODELER_DB_PASSWORD:-modeler}
    volumes:
      - pg-modeler-dev-data:/var/lib/postgresql/data
    networks:
      - camunda-dev-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB:-modeler} -U ${POSTGRES_USER:-modeler}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-dev
    ports:
      - "8025:8025" # Web UI
    networks:
      - camunda-dev-net
    restart: unless-stopped

  modeler-websockets:
    image: camunda/web-modeler-websockets:${MODELER_VERSION:-latest}
    container_name: modeler-websockets-dev
    environment:
      - PUSHER_APP_ID=${PUSHER_APP_ID:-web-modeler}
      - PUSHER_APP_KEY=${PUSHER_APP_KEY:-dev-key}
      - PUSHER_APP_SECRET=${PUSHER_APP_SECRET:-dev-secret}
      - PUSHER_APP_PATH=${PUSHER_APP_PATH:-/}
    expose:
      - "8060"
    networks:
      - camunda-dev-net
    restart: unless-stopped

  modeler-restapi:
    image: camunda/web-modeler-restapi:${MODELER_VERSION:-latest}
    container_name: modeler-restapi-dev
    depends_on:
      - postgres-modeler
      - modeler-websockets
      - identity
      - keycloak
    environment:
      # Database
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-modeler:5432/${MODELER_DB_NAME:-modeler}
      - SPRING_DATASOURCE_USERNAME=${MODELER_DB_USER:-modeler}
      - SPRING_DATASOURCE_PASSWORD=${MODELER_DB_PASSWORD:-modeler}

      # Mail (SMTP)
      - RESTAPI_MAIL_HOST=mailhog
      - RESTAPI_MAIL_PORT=1025
      - RESTAPI_MAIL_ENABLE_TLS=false
      - RESTAPI_MAIL_FROM_ADDRESS=${RESTAPI_MAIL_FROM_ADDRESS:-noreply@example.com}
      - RESTAPI_MAIL_FROM_NAME=${RESTAPI_MAIL_FROM_NAME:-Camunda}
      - RESTAPI_SERVER_URL=${MODELER_SERVER_URL:-http://localhost:8083}

      # WebSockets (internal)
      - RESTAPI_PUSHER_HOST=modeler-websockets
      - RESTAPI_PUSHER_PORT=8060
      - RESTAPI_PUSHER_APP_ID=${PUSHER_APP_ID:-web-modeler}
      - RESTAPI_PUSHER_KEY=${PUSHER_APP_KEY:-dev-key}
      - RESTAPI_PUSHER_SECRET=${PUSHER_APP_SECRET:-dev-secret}

      # Identity / Keycloak (internal)
      - CAMUNDA_IDENTITY_BASEURL=http://identity:8080
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:18080/realms/${KEYCLOAK_REALM:-camunda-platform}

      # Cluster config for Deploy/Run from Modeler
      - CAMUNDA_MODELER_CLUSTERS_0_ID=${MODELER_CLUSTER_ID:-local-zeebe}
      - CAMUNDA_MODELER_CLUSTERS_0_NAME=${MODELER_CLUSTER_NAME:-Local Zeebe}
      - CAMUNDA_MODELER_CLUSTERS_0_VERSION=${ZEEBE_VERSION:-latest}
      - CAMUNDA_MODELER_CLUSTERS_0_AUTHENTICATION=${MODELER_CLUSTER_AUTHENTICATION:-NONE}
      - CAMUNDA_MODELER_CLUSTERS_0_URL_ZEEBE_GRPC=grpc://zeebe:26500
      - CAMUNDA_MODELER_CLUSTERS_0_URL_OPERATE=http://operate:8080
      - CAMUNDA_MODELER_CLUSTERS_0_URL_TASKLIST=http://tasklist:8080

    ports:
      - "8091:8091" # management port (optional)
    networks:
      - camunda-dev-net
    restart: unless-stopped

  modeler-webapp:
    image: camunda/web-modeler-webapp:${MODELER_VERSION:-latest}
    container_name: modeler-webapp-dev
    depends_on:
      - modeler-restapi
      - modeler-websockets
      - identity
      - keycloak
    environment:
      # General
      - SERVER_URL=${MODELER_SERVER_URL:-http://localhost:8083}
      - SERVER_HTTPS_ONLY=false
      - RESTAPI_HOST=modeler-restapi
      - RESTAPI_PORT=8081
      - RESTAPI_MANAGEMENT_PORT=8091

      # Identity / Keycloak
      - OAUTH2_CLIENT_ID=${OAUTH2_CLIENT_ID:-web-modeler}
      - OAUTH2_JWKS_URL=http://keycloak:18080/realms/${KEYCLOAK_REALM:-camunda-platform}/protocol/openid-connect/certs
      - OAUTH2_TOKEN_ISSUER=http://keycloak:18080/realms/${KEYCLOAK_REALM:-camunda-platform}
      - IDENTITY_BASE_URL=http://identity:8080

      # WebSockets
      - PUSHER_HOST=modeler-websockets
      - PUSHER_PORT=8060
      - PUSHER_APP_ID=${PUSHER_APP_ID:-web-modeler}
      - PUSHER_KEY=${PUSHER_APP_KEY:-dev-key}
      - PUSHER_SECRET=${PUSHER_APP_SECRET:-dev-secret}

      # Feature flags (dev defaults)
      - PLAY_ENABLED=true
      - ZEEBE_BPMN_DEPLOYMENT_ENABLED=true
      - ZEEBE_DMN_DEPLOYMENT_ENABLED=true

    ports:
      - "8083:8080" # expose Web Modeler Webapp on 8083
    networks:
      - camunda-dev-net
    restart: unless-stopped

volumes:
  es-dev-data:
  zeebe-dev-data:
  pg-identity-dev-data:
  pg-modeler-dev-data:

networks:
  camunda-dev-net:
    driver: bridge